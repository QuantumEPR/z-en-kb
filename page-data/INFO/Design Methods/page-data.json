{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/INFO/Design Methods",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Designing Again\"), mdx(\"hr\", null), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../MATH/Modern%20Algebra\",\n    \"title\": \"Modern Algebra\"\n  }, \"[[Modern Algebra]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#designing-again","title":"Designing Again"}]},"outboundReferences":[{"contextLine":"[[Modern Algebra]]","targetAnchor":null,"refWord":"Modern Algebra","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Groups and Rings\"), mdx(\"p\", null, \"This was a class focused on various abstractions. I learned a lot, from symmetries to group actions and many more. The excitement of proving mathematical statement cannot be expressed by my words, and all I can offer is a record of what I did.\"), mdx(\"h2\", null, \"Artifacts\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/z-en-kb/1a654d88c5e5ddc6d81f0aad69a5706e/MATH_403.pdf\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../INFO/Design%20Methods\",\n    \"title\": \"Design Methods\"\n  }, \"[[Design Methods]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../INFO/Capstone\",\n    \"title\": \"Capstone\"\n  }, \"[[Capstone]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c21bb3c5-3507-5369-87f9-4cded194edf3","fields":{"slug":"/MATH/Modern Algebra","title":"Groups and Rings"}}}}],"inboundReferences":[{"contextLine":"[[Design Methods]]","referrer":{"parent":{"id":"c21bb3c5-3507-5369-87f9-4cded194edf3","fields":{"slug":"/MATH/Modern Algebra","title":"Groups and Rings"}}}},{"contextLine":"[[Design Methods]]","referrer":{"parent":{"id":"c835251e-5475-5a7f-be02-f54d16968993","fields":{"slug":"/MATH/Mathematical Reasoning","title":"Thinking Numbers. Proving Statements"}}}},{"contextLine":"[[Design Methods]]","referrer":{"parent":{"id":"2870ff1f-c941-51b3-b734-dd950d242c01","fields":{"slug":"/MATH/Numerical Analysis","title":"Numbers and Magic"}}}}]},"fields":{"slug":"/INFO/Design Methods","title":"Designing Again"}}},"pageContext":{"id":"ba677b43-914b-5ff6-aa3b-f1348fc50686","refWordMdxSlugDict":{"Modern Algebra":"MATH/Modern-Algebra","Design Methods":"INFO/Design-Methods","Capstone":"INFO/Capstone","Storytelling in Sciences":"HONORS/Storytelling-in-Sciences","Data Science Methods":"INFO/Data-Science-Methods","Machine Learning":"CSE/Machine-Learning","Computer Systems":"CSE/Computer-Systems","Artificial Intelligence":"CSE/Artificial-Intelligence","Learning Statement":"Learning-Statement","Badminton":"Badminton","inbox":"unfiled/inbox","todo":"unfiled/todo"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}
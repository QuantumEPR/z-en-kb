{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Design Methods",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Designing Again\"), mdx(\"hr\", null), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Modern%20Algebra\",\n    \"title\": \"Modern Algebra\"\n  }, \"[[Modern Algebra]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#designing-again","title":"Designing Again"}]},"outboundReferences":[{"contextLine":"[[Modern Algebra]]","targetAnchor":null,"refWord":"Modern Algebra","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Modern Algebra\"), mdx(\"h2\", null, \"Groups and Rings\"), mdx(\"p\", null, \"This was a class focused on various abstractions. I learned a lot, from symmetries to group actions and many more. The excitement of proving mathematical statement cannot be expressed by my words, and all I can offer is a record of what I did.\"), mdx(\"h2\", null, \"Artifacts\"), mdx(\"a\", {\n    href: \"/z-en-kb/1a654d88c5e5ddc6d81f0aad69a5706e/MATH_403.pdf\"\n  }, \"MATH_403\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Design%20Methods\",\n    \"title\": \"Design Methods\"\n  }, \"[[Design Methods]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Capstone\",\n    \"title\": \"Capstone\"\n  }, \"[[Capstone]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"5cf7caa5-b10f-5615-895a-59edd07f7476","fields":{"slug":"/Modern Algebra","title":"Modern Algebra"}}}}],"inboundReferences":[{"contextLine":"[[Design Methods]]","referrer":{"parent":{"id":"5cf7caa5-b10f-5615-895a-59edd07f7476","fields":{"slug":"/Modern Algebra","title":"Modern Algebra"}}}},{"contextLine":"[[Design Methods]]","referrer":{"parent":{"id":"c249de16-59ef-5cde-baff-0239fa665ebf","fields":{"slug":"/Numerical Analysis","title":"Numbers and Magic"}}}},{"contextLine":"[[Design Methods]]","referrer":{"parent":{"id":"780ea80a-963c-51d4-9c65-1c10c553c2de","fields":{"slug":"/Mathematical Reasoning","title":"Thinking Numbers. Proving Statements"}}}}]},"fields":{"slug":"/Design Methods","title":"Designing Again"}}},"pageContext":{"id":"18efe694-4228-5271-bfdd-a7bfca984ea9","refWordMdxSlugDict":{"Modern Algebra":"Modern-Algebra","Design Methods":"Design-Methods","Capstone":"Capstone","Storytelling in Sciences":"Storytelling-in-Sciences","Data Science Methods":"Data-Science-Methods","Machine Learning":"Machine-Learning","Computer Systems":"Computer-Systems","Artificial Intelligence":"Artificial-Intelligence","Learning Statement":"Learning-Statement","Badminton":"Badminton","Matrix Algebra":"Matrix-Algebra","Going Downhill":"Going-Downhill","Photography":"Photography","Planting Design":"Planting-Design","Logic":"Logic","Constructed Languages":"Constructed-Languages","Landscape Architecture":"Landscape-Architecture","Landscape in PNW":"Landscape-in-PNW","Leadership, Democracy and a More Thoughtful Public":"Leadership-Democracy-and-a-More-Thoughtful-Public","Game Analysis":"Game-Analysis","Metamorphosis":"Metamorphosis","Mathematical Reasoning":"Mathematical-Reasoning","Numerical Analysis":"Numerical-Analysis","Experiential Learning":"Experiential-Learning","Memoir...Reflected":"Memoir...Reflected","Memoir":"Memoir","Designing Future":"Designing-Future","Java":"Java","The Foothill":"The-Foothill"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}